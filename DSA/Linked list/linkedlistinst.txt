#include <iostream>

using namespace std;
class  Node{
    public:
    int data;
    Node* next;
    Node(int data){
        this->data=data;
        this->next=NULL;
    }
};
void print(Node* &head){
    Node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<endl;
}
int getlen(Node* &head){
    int len=0;
    Node* temp=head;
    while(temp!=NULL){
        len++;
        temp=temp->next;
    }
   return len;
}

void Insertatfirst(Node* &head,Node* &tail,int data){
    if(head==NULL){
        Node* newnode=new Node(data);
        head=newnode;
        tail=newnode;
    }
    else{
        Node* newnode=new Node(data);
        newnode->next=head;
        head=newnode;
    }
}
void InsertAtLast(Node* &head,Node* &tail,int data){
    if(head==NULL){
        Node* newnode=new Node(data);
        head=newnode;
        tail=newnode;
    }
    else{
         Node* newnode=new Node(data);
        tail->next=newnode;
        tail=newnode;
    }
}
void InsertAtPosition(Node* &head,Node* &tail,int data,int pos){
    int len=getlen(head);
    if(pos==1){
        Insertatfirst(head,tail,data);
        return;
    }
    else if(pos>=len){
        InsertAtLast(head,tail,data);
        return;
    }
    else{
        Node* nn1=new Node(data);
        Node* prev=NULL;
        Node* curr=head;
        while(pos!=1){
            pos--;
            prev=curr;
            curr=curr->next;
        }
        nn1->next=curr;
        prev->next=nn1;
        
        
    }
    
}



int main()
{
   
   Node* head=NULL;
   Node* tail=NULL;
//   Node* n1=new Node(7);
//   Node* n2=new Node(8);
//   Node* n3=new Node(6);
//   Node* n4=new Node(4);
//   Node* head=n1;
//   n1->next=n2;
//   n2->next=n3;
//   n3->next=n4;
//   n4->next=NULL;
   
//   print(head);
//   cout<<getlen(n4);
Insertatfirst(head,tail,10);
Insertatfirst(head,tail,100);
Insertatfirst(head,tail,1000);
Insertatfirst(head,tail,10000);
Insertatfirst(head,tail,100000);
print(head);cout<<endl;
InsertAtLast(head,tail,9);
InsertAtLast(head,tail,90);
Insertatfirst(head,tail,1000001);
print(head);cout<<endl;
InsertAtPosition(head,tail,88,15);
print(head);


    return 0;
}